name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Daily integration tests at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy/test'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - qa
      deployment_type:
        description: 'Deployment type'
        required: false
        default: 'deploy'
        type: choice
        options:
          - deploy
          - integration-test
          - performance-test
          - security-scan

env:
  NODE_VERSION: '18,20'
  AWS_REGION_TEST: 'eu-north-1'
  AWS_REGION_QA: 'us-east-1'
  SERVICE_NAME: 'game-base-service'

permissions:
  contents: read
  packages: write
  issues: write
  actions: read
  security-events: write
  id-token: write

jobs:
  # Phase 1: Quality Gates
  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: ESLint check
        run: npm run lint

      - name: TypeScript type check
        run: npm run typecheck

      - name: Unit tests with coverage
        run: npm run test:coverage

      - name: Security audit
        run: npm audit --audit-level=high

      - name: Build project
        run: npm run build

      - name: CDK Synthesize
        run: npm run synth:test

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

  # Phase 2: Integration Tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: quality-gates
    if: github.event_name == 'push' || github.event_name == 'schedule'
    environment: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials for test
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION_TEST }}
          role-to-assume: arn:aws:iam::728427470046:role/GitHubActionsRole-GameBaseService
          role-session-name: GitHubActions-GameBaseService-Test

      - name: Run integration tests
        run: npm run test:integration
        env:
          TEST_ENV: integration
          CDK_DEFAULT_ACCOUNT: '728427470046'
          CDK_DEFAULT_REGION: 'eu-north-1'

  # Phase 3: Deploy to Test Environment
  deploy-test:
    name: Deploy to Test
    runs-on: ubuntu-latest
    needs: [quality-gates, integration-tests]
    if: github.ref == 'refs/heads/main'
    environment: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials for test deployment
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION_TEST }}
          role-to-assume: arn:aws:iam::728427470046:role/GitHubActionsRole-GameBaseService
          role-session-name: GitHubActions-GameBaseService-Deploy-Test

      - name: Deploy to test environment
        run: |
          echo "ðŸš€ Deploying GameBaseService to test environment..."
          npm run deploy:test
        env:
          CDK_DEFAULT_ACCOUNT: '728427470046'
          CDK_DEFAULT_REGION: 'eu-north-1'

      - name: Run smoke tests
        run: npm run test:smoke
        env:
          TEST_ENV: test

      - name: Deployment notification
        run: |
          echo "âœ… GameBaseService successfully deployed to test environment"
          echo "Account: 728427470046"
          echo "Region: eu-north-1"

  # Phase 4: Deploy to QA Environment (Manual/Scheduled)
  deploy-qa:
    name: Deploy to QA
    runs-on: ubuntu-latest
    needs: deploy-test
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'qa') ||
      github.event_name == 'schedule'
    environment: qa

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials for QA deployment
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION_QA }}
          role-to-assume: arn:aws:iam::077029784291:role/GitHubActionsRole-GameBaseService
          role-session-name: GitHubActions-GameBaseService-Deploy-QA

      - name: Deploy to QA environment
        run: |
          echo "ðŸš€ Deploying GameBaseService to QA environment..."
          npm run deploy:qa
        env:
          CDK_DEFAULT_ACCOUNT: '077029784291'
          CDK_DEFAULT_REGION: 'us-east-1'

      - name: Run QA validation tests
        run: npm run test:qa
        env:
          TEST_ENV: qa

      - name: QA deployment notification
        run: |
          echo "âœ… GameBaseService successfully deployed to QA environment"
          echo "Account: 077029784291"
          echo "Region: us-east-1"

  # Phase 5: Security and Performance Testing
  security-performance:
    name: Security & Performance Tests
    runs-on: ubuntu-latest
    needs: quality-gates
    if: github.event_name == 'workflow_dispatch' && inputs.deployment_type != 'deploy'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Security scan
        if: inputs.deployment_type == 'security-scan'
        run: |
          echo "ðŸ”’ Running security scans..."
          npm audit --audit-level=moderate
          # Additional security tooling would go here

      - name: Performance testing
        if: inputs.deployment_type == 'performance-test'
        run: |
          echo "âš¡ Running performance tests..."
          # Performance testing tooling would go here
          npm run test:integration
        env:
          TEST_ENV: performance